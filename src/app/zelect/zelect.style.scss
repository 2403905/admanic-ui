@import '../../styles/variables';

*,
*:before,
*:after {
  box-sizing: border-box;
  transition: all .1s ease;
}

$caret-width: 30px;

.zelect {
  position: relative;
  background: $input-bg;
  border: 1px solid $input-border-color;
  border-radius: $input-border-radius;
  color: $text-color;
  font-size: $text-size;
  &__input {
    display: table-cell;
    vertical-align: middle;
    width: 100%;
    &-group {
      display: table;
      width: 100%;
    }
    &__addon {
      margin: 0;
      display: table-cell;
      vertical-align: middle;
      padding: 0 5px;
      border-right: 1px solid $input-border-color;
      background: $input-addon-bg;
      border-radius: $input-border-radius 0 0 $input-border-radius;
      color: $input-addon-color;
      min-width: $input-addon-width;
      text-align: center;
      line-height: 1;
      .material-icons {
        font-size: inherit;
      }
    }
    &__field {
      display: block;
      width: 100%;
      @include resetInput;
      padding: $input-y-padding $caret-width $input-y-padding $input-x-padding;
    }
    .field {
      //padding-right: 32px;
    }
  }
  &__button {
    @include resetBtn;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    font-size: 0;
    color: transparent;
    width: $caret-width;
    border-radius: 0 $input-border-radius $input-border-radius 0;
    cursor: pointer;
    &:before {
      @include caretIcon(#888);
      @include centerAbsolut;
    }
  }

  &__options {
    display: none;
    position: absolute;
    top: 100%;
    left: -1px;
    right: -1px;
    background: $input-bg;
    border: 1px solid $input-border-color;
    border-top-width: 0;
    margin-top: 1px;
    border-radius: 0 0 3px 3px;
    z-index: 102;
    overflow: hidden;
    &.with-addon {
      left: $input-addon-width - 1px;
    }
    &__results {
      max-height: 165px;
      overflow: auto;
      margin: 0 !important;
      padding: 0 !important;
      list-style: none !important;
      &.clear-selection {
        border-top: 1px solid #cfd3d7;
        li {
          font-weight: bold;
          background: transparent !important;
        }
      }
      > p {
        margin: 0;
        padding: $input-y-padding + 2px $input-x-padding / 2;
        font-weight: bold;
        border-top: 1px solid $input-border-color;
        line-height: 1;
        &:first-child {
          border-top: none;
        }
        &.hidden {
          display: none;
        }
      }
      > li,
      > ol {
        position: relative;
        cursor: pointer;
        display: block;
        border: none;
        height: auto;
        text-align: left;
        border-top: none;
        line-height: 1em;
        padding: $select-item-y-padding $select-item-x-padding;
        font-size: $text-size - 1px;
        text-transform: none;
        font-weight: normal;
        box-shadow: none;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        &.is-selected {
          font-weight: 600;
        }
        &.hidden {
          display: none;
        }
        &:hover,
        &.is-selected {
          background-color: $select-item-bg;
        }
      }
      &:hover {
        > * {
          &.is-selected {
            background: transparent;
            &:hover {
              background-color: $select-item-bg;
            }
          }
        }
      }
      b {
        display: block;
        margin-top: 5px;
        font-weight: 700;
      }
    }
  }

  &__add-new-btn {
    @include resetBtn;
    padding: $input-y-padding $input-x-padding*2;
    border-top: 1px solid $input-border-color;
    width: 100%;
    position: relative;
    text-align: left;
    cursor: pointer;
    i {
      font-size: 16px;
      position: absolute;
      top: 8px;
      left: $input-x-padding - 5px;
    }
  }

  &.is-active {
    border-radius: $input-border-radius $input-border-radius 0 0;
    &.with-addon {
      border-bottom-left-radius: $input-border-radius;
    }
    .zelect__options {
      display: block;
    }
    .zelect__button {
      &:before {
        transform: rotate(180deg) translateY(50%);
      }
    }
  }
}
